# Creating a Virtual Assistant --> Jarvis 

from pickle import NONE
from tkinter.dnd import dnd_start
from win32com.client import Dispatch
import speech_recognition as sr  # pip install speechRecognition
import datetime
import wikipedia # pip install wikipedia
import webbrowser
import os
import random as r
import googletrans as gt
from wikipedia.wikipedia import set_rate_limiting
import time

global langs,dst,SIR
langs = gt.LANGUAGES

def speak(str):
    speak = Dispatch(("SAPI.SpVoice"))
    speak.Speak(str)

# This function wish as per the current time 
def wishMe(dst):
    hour = int(datetime.datetime.now().hour)
    global SIR
    if hour >= 0 and hour < 12:
        print(translation("Good Morning "+ SIR+"\n Have a Nice day !!!",dst))
    elif hour >= 12 and hour < 16:
        print(translation("Good Afternoon "+ SIR,dst))
    elif hour >= 16 and hour < 20:
        print(translation("Good Evening "+ SIR,dst))
    else:
        print(translation("Good Night "+ SIR,dst))


# Main Program starts here..
# this function take command from microphone
def takeCommand(dst):
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print(translation("Listening ...",dst))
        audio = r.listen(source,phrase_time_limit=5)
    try :
        print(translation("Recognizing ...",dst))
        query = r.recognize_google(audio, language=dst)
        print(translation('owner said :',dst),query,"\n")
    except Exception as e:
        print(translation("Say that again please !!!\n",dst))
        query = None
    return query

def initial():
    global langs
    global dst
    global SIR
    # print(translation("Initializing Aatma nirbhar...",dst))
    for i,j in langs.items():
        print(i," : ",j)
        
    dst = input("Select Assistant Language : ")
    SIR = input("Enter your Name : ")
    wishMe(dst)
    print(translation("I am virtual friend. How may I help you ?",dst))


def translation(text,dest):
    trans = gt.Translator()
    src = trans.detect(text).lang
    return trans.translate(text,src = src,dest = dest).text

def Main(dst):
    # Running 
    # wishMe()
    global SIR
    query = takeCommand(dst)
    if query != None:
        query = translation(query,'en')
        query = query.lower()

        # Logic for executing tasks as per the query
        if 'wikipedia' in query:
            try:
                print(translation("Searching Wikipedia ...",dst))
                query = query.replace("wikipedia","")
                results = wikipedia.summary(query, sentences = 5)
                print(translation(results,dst))
                # speak(results)
            except Exception as e:
                # print(f"Exception Occured --> {e}")
                print(translation("Exception occured while executing the program !!!",dst))   
        elif 'youtube' in query:
            try:
                webbrowser.open_new("youtube.com")
                print(translation("opening youtube",dst))
            except Exception as e:
                # print(f"Exception Occured --> {e}")
                print(translation("Exception occured while executing the program !!!",dst))    
        elif 'google' in query:
            try:
                webbrowser.open_new_tab("google.com")
                print(translation("opening google",dst))
            except Exception as e:
                # print(f"Exception Occured --> {e}")
                print(translation("Exception occured while executing the program !!!",dst))    
        elif 'instagram' in query:
            try:
                webbrowser.open_new_tab("instagram.com")
                print(translation("opening instagram",dst))
            except Exception as e:
                # print(f"Exception Occured --> {e}")
                print(translation("Exception occured while executing the program !!!",dst))    
        elif 'facebook' in query:
            try:
                webbrowser.open_new_tab("facebook.com")
                print(translation("opening facebook",dst))
            except Exception as e:
                # print(f"Exception Occured --> {e}")
                print(translation("Exception occured while executing the program !!!",dst))    
        elif 'gmail' in query:
            try:
                webbrowser.open_new_tab("mail.google.com")
                print(translation("opening G-mail",dst))
            except Exception as e:
                # print(f"Exception Occured --> {e}")
                print(translation("Exception occured while executing the program !!!",dst))
        elif 'whatsapp' in query:
            try:
                webbrowser.open_new_tab("web.whatsapp.com")
                print(translation("opening WhatsApp",dst))
            except Exception as e:
                # print(f"Exception Occured --> {e}")
                print(translation("Exception occured while executing the program !!!",dst))        

        elif 'play music' in query:
            song_dir = "E:/Users/fahad/Music/All Songs/Top 20 Hindi Movies"
            songs = os.listdir(song_dir)
            os.startfile(os.path.join(song_dir,songs[r.randint(0,len(songs)-1)]))
        elif 'movie' in query:
            movies_dir = "E:/Users/fahad/Videos/Movies/Movies"
            movies = os.listdir(movies_dir)
            os.startfile(os.path.join(movies_dir,movies[r.randint(0,len(movies)-1)]))
        elif 'time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")
            print(translation(f"The Time now is {strTime}",dst))
        elif 'open the notepad' in query:
            codePath  = "C:/Users/fahad/AppData/Local/Microsoft/WindowsApps/notepad.exe"
            os.startfile(codePath)
        elif 'open paint' in query:
            codePath  = "C:/Users/fahad/AppData/Local/Microsoft/WindowsApps/mspaint.exe"
            os.startfile(codePath)
        elif 'thank you' in query:
            print(translation(f"Welcome {SIR} , we will meet soon !!",dst))
            exit()

        elif 'bluetooth' in query:
            os.system('fsquirt')

        elif 'calculator' in query:
            os.system('calc')

        elif 'write' in query:
            os.system('write')

        elif 'draw' in query:
            os.system('mspaint')

        elif 'help' in query:
            tasks(dst)
        else:
            print(translation("I'm sorry, I didt't understand the query.",dst))
    
    else:
        time.sleep(5)


def tasks(dst):
    list1 ={
        1:'wikipedia search',
        2:'opening youtube',
        3:'opening google',
        4:'open instagram',
        5:'open facebook',
        6:'open gmail',
        7:'open whatsapp',
        8:'play music',
        9:'play movie',
        10:'informing time',
        11:'open wordpad (taking notes)',
        12:'open paint',
        13:'open calculator',
        14:'bluetooth transfer' #15: open notepad, 16, open a specfic software.
    }
    
    for i,j in list1.items():
        print(translation(f"{i} : {j}",dst))
    time.sleep(3)

initial()
while True:
    if __name__ == "__main__":
       Main(dst)

# pip install aiohttp==3.8.1
# pip install aiosignal==1.2.0
# pip install appdirs==1.4.4
# pip install argon2-cffi==21.3.0
# pip install argon2-cffi-bindings==21.2.0
# pip install asgiref==3.5.2
# pip install asttokens==2.0.5
# pip install async-timeout==4.0.2
# pip install attrs==21.4.0
# pip install autopep8==1.6.0
# pip install Babel==2.10.3
# pip install backcall==0.2.0
# pip install beautifulsoup4==4.10.0
# pip install bleach==4.1.0
# pip install certifi==2021.10.8
# pip install cffi==1.15.0
# pip install chardet==3.0.4
# pip install charset-normalizer==2.0.12
# pip install click==8.1.2
# pip install colorama==0.4.4
# pip install comtypes==1.1.11
# pip install cycler==0.11.0
# pip install debugpy==1.6.0
# pip install decorator==4.4.2
# pip install deepgram-sdk==0.3.0
# pip install defusedxml==0.7.1
# pip install Django==4.0.7
# pip install django-bootstrap-modal-forms==2.2.0
# pip install django-crispy-forms==1.14.0
# pip install entrypoints==0.4
# pip install executing==0.8.3
# pip install Flask==2.1.1
# pip install fonttools==4.33.3
# pip install fpdf==1.7.2
# pip install freegames==2.4.0
# pip install frozenlist==1.3.1
# pip install googletrans==4.0.0rc1
# pip install h11==0.9.0
# pip install h2==3.2.0
# pip install hpack==3.0.0
# pip install hstspreload==2021.12.1
# pip install htmldocx==0.0.6
# pip install httpcore==0.9.1
# pip install httpx==0.13.3
# pip install hyperframe==5.2.0
# pip install idna==2.10
# pip install imageio==2.20.0
# pip install imageio-ffmpeg==0.4.7
# pip install importlib-metadata==4.11.3
# pip install ipykernel==6.11.0
# pip install ipython==8.2.0
# pip install ipython-genutils==0.2.0
# pip install ipywidgets==7.7.0
# pip install itsdangerous==2.1.2
# pip install jedi==0.18.1
# pip install Jinja2==3.1.1
# pip install jsonschema==4.4.0
# pip install jupyter==1.0.0
# pip install jupyter-client==7.2.1
# pip install jupyter-console==6.4.3
# pip install jupyter-core==4.9.2
# pip install jupyterlab-pygments==0.1.2
# pip install jupyterlab-widgets==1.1.0
# pip install kiwisolver==1.4.2
# pip install language-tool-python==2.7.1
# pip install libmagic==1.0
# pip install lxml==4.9.1
# pip install MarkupSafe==2.1.1
# pip install matplotlib==3.5.2
# pip install matplotlib-inline==0.1.3
# pip install mistune==0.8.4
# pip install MouseInfo==0.1.3
# pip install moviepy==1.0.3
# pip install multidict==6.0.2
# pip install mysql-connector-python==8.0.29
# pip install nbclient==0.5.13
# pip install nbconvert==6.4.5
# pip install nbformat==5.2.0
# pip install nest-asyncio==1.5.5
# pip install notebook==6.4.10
# pip install numpy==1.22.3
# pip install opencv-python==4.5.5.64
# pip install packaging==21.3
# pip install pandas==1.4.2
# pip install pandocfilters==1.5.0
# pip install parso==0.8.3
# pip install pdfkit==1.0.0
# pip install pickleshare==0.7.5
# pip install Pillow==9.1.0
# pip install proglog==0.1.10
# pip install prometheus-client==0.13.1
# pip install prompt-toolkit==3.0.28
# pip install protobuf==3.20.1
# pip install psutil==5.9.0
# pip install pure-eval==0.2.2
# PyAudio @ file:///D:\APPS AND SOFTWARES\PYTHON/PyAudio-0.2.11-cp39-cp39-win_amd64.whl
# pip install PyAutoGUI==0.9.53
# pip install pycodestyle==2.8.0
# pip install pycparser==2.21
# pip install pyee==8.2.2
# pip install PyGetWindow==0.0.9
# pip install Pygments==2.11.2
# pip install PyMsgBox==1.0.9
# pip install pyparsing==3.0.7
# pip install pyperclip==1.8.2
# pip install pypiwin32==223
# pip install pyppeteer==1.0.2
# pip install PyRect==0.2.0
# pip install pyrsistent==0.18.1
# pip install PyScreeze==0.1.28
# pip install python-dateutil==2.8.2
# pip install python-docx==0.8.11
# pip install python-magic-bin==0.4.14
# pip install python-mimeparse==1.6.0
# pip install pyttsx3==2.90
# pip install pytweening==1.0.4
# pip install pytz==2018.5
# pip install pywhatkit==5.3
# pip install pywin32==303
# pip install pywinpty==2.0.5
# pip install PyYAML==6.0
# pip install pyzmq==22.3.0
# pip install qtconsole==5.3.0
# pip install QtPy==2.0.1
# pip install requests==2.27.1
# pip install rfc3986==1.5.0
# pip install scipy==1.8.0
# pip install Send2Trash==1.8.0
# pip install six==1.11.0
# pip install sketchpy==0.0.18
# pip install sniffio==1.2.0
# pip install soupsieve==2.3.1
# pip install SpeechRecognition==3.8.1
# pip install sqlparse==0.4.2
# pip install stack-data==0.2.0
# pip install svg.path==5.1
# pip install svgpathtools==1.4.4
# pip install svgwrite==1.4.2
# pip install terminado==0.13.3
# pip install testpath==0.6.0
# pip install tk==0.1.0
# pip install tkcalendar==1.6.1
# pip install toml==0.10.2
# pip install tornado==6.1
# pip install tqdm==4.63.1
# pip install traitlets==5.1.1
# pip install translation==1.0.5
# pip install turtle==0.0.1
# pip install tzdata==2022.1
# pip install urllib3==1.26.9
# pip install wcwidth==0.2.5
# pip install webencodings==0.5.1
# pip install websockets==10.2
# pip install Werkzeug==2.1.1
# pip install widgetsnbextension==3.6.0
# pip install wikipedia==1.4.0
# pip install yarl==1.8.1
# pip install zipp==3.7.0
